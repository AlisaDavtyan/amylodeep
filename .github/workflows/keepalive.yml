name: AmyloDeep Keep-Alive
on:
  schedule:
    - cron: "*/15 * * * *"   # Every 15 minutes (fixed cron syntax)
  workflow_dispatch:
jobs:
  keep-alive:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    concurrency:
      group: amylodeep-keepalive
      cancel-in-progress: false
    steps:
      - name: Checkout (optional if you only cat files)
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      # Cache Playwright browser downloads
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ runner.os }}-v1-1.47.2
          restore-keys: |
            playwright-browsers-${{ runner.os }}-v1-
      # Create a minimal package.json so npm cache works
      - name: Prepare package.json
        run: |
          cat > package.json <<'JSON'
          {
            "name": "keepalive",
            "private": true,
            "version": "1.0.0",
            "dependencies": {
              "playwright": "1.47.2"
            }
          }
          JSON
      - name: Install deps (uses npm cache)
        run: npm ci
      # Install browser only, no OS deps (Ubuntu runner already has them)
      - name: Install Chromium for Playwright (no --with-deps)
        run: npx playwright install chromium
      - name: Create keepalive script
        run: |
          cat > keepalive.js <<'EOF'
          const { chromium } = require('playwright');
          (async () => {
            const url = process.env.APP_URL || "https://amylodeep.streamlit.app/?keepalive=1";
            console.log(`üöÄ Visiting: ${url}`);
            
            const browser = await chromium.launch({ 
              headless: true, 
              args: ["--no-sandbox", "--disable-setuid-sandbox", "--disable-dev-shm-usage"] 
            });
            
            const context = await browser.newContext({
              userAgent: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36",
              viewport: { width: 1280, height: 800 }
            });
            
            const page = await context.newPage();
            
            // Set up error handling
            page.on('pageerror', err => console.log('Page error:', err.message));
            page.on('console', msg => {
              if (msg.type() === 'error') console.log('Console error:', msg.text());
            });
            
            try {
              await page.goto(url, { waitUntil: "domcontentloaded", timeout: 120000 });
              console.log("üìÑ Page loaded");
              
              try {
                await page.waitForLoadState("networkidle", { timeout: 30000 });
                console.log("üåê Network idle reached");
              } catch (e) {
                console.log("‚ö†Ô∏è Network idle timeout (continuing anyway)");
              }
              
              // Wait a bit more to ensure the app is fully loaded
              await page.waitForTimeout(15000);
              console.log("‚è±Ô∏è Additional wait completed");
              
            } catch (error) {
              console.error("‚ùå Navigation failed:", error.message);
              throw error;
            } finally {
              await browser.close();
            }
            
            console.log("‚úÖ Keep-alive visit completed successfully");
          })().catch(err => {
            console.error("‚ùå Keep-alive failed:", err.message);
            process.exit(1);
          });
          EOF
      - name: Run keepalive
        env:
          APP_URL: https://amylodeep.streamlit.app/?skip_splash=1
        run: node keepalive.js
