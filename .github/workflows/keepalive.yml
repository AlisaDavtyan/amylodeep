name: Hybrid Keep-Alive

on:
  schedule:
    - cron: "0 */4 * * *" 
  workflow_dispatch:

jobs:
  keep-alive:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Multi-Stage App Wake-Up
      run: |
        URL="https://amylodeep.streamlit.app/"
        echo "🚀 Starting multi-stage wake-up for $URL"
        
        # Stage 1: Quick health check
        echo "📡 Stage 1: Quick health check..."
        response=$(curl -s -w "%{http_code}|%{time_total}" -m 15 "$URL")
        http_code=$(echo $response | cut -d'|' -f1)
        time_total=$(echo $response | cut -d'|' -f2)
        
        echo "Initial response: $http_code (${time_total}s)"
        
        if [ "$http_code" -eq 200 ] && (( $(echo "$time_total < 3.0" | bc -l) )); then
          echo "✅ App is already awake and responsive!"
        else
          echo "😴 App seems to be sleeping or slow, initiating wake-up..."
          
          # Stage 2: Aggressive wake-up sequence
          echo "📡 Stage 2: Sending wake-up requests..."
          for i in {1..5}; do
            echo "Wake-up attempt $i/5..."
            curl -s -m 30 \
              -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36" \
              -H "Accept: text/html,application/xhtml+xml,application/xml" \
              -H "Cache-Control: no-cache" \
              "$URL" > /dev/null
            
            # Check if it's responding better now
            quick_check=$(curl -s -w "%{http_code}" -m 10 "$URL")
            if [ "$quick_check" -eq 200 ]; then
              echo "✅ App responded with 200 after $i attempts"
              break
            fi
            
            [ $i -lt 5 ] && sleep 15
          done
          
          # Stage 3: Final verification with longer timeout
          echo "📡 Stage 3: Final verification..."
          sleep 10
          final_response=$(curl -s -w "%{http_code}|%{time_total}|%{size_download}" -m 45 "$URL")
          final_code=$(echo $final_response | cut -d'|' -f1)
          final_time=$(echo $final_response | cut -d'|' -f2)
          final_size=$(echo $final_response | cut -d'|' -f3)
          
          echo "Final check: $final_code (${final_time}s, ${final_size} bytes)"
          
          if [ "$final_code" -eq 200 ]; then
            if [ "$final_size" -gt 1000 ]; then
              echo "✅ App is fully awake and serving content!"
            else
              echo "⚠️ App responded but content seems minimal"
            fi
          else
            echo "❌ App still not responding properly"
            exit 1
          fi
        fi
        
        echo "🎯 Keep-alive sequence completed at $(date)"

    - name: Extended Activity Simulation
      run: |
        echo "🔗 Simulating extended user activity..."
        URL="https://amylodeep.streamlit.app/"
        
        # Simulate a user staying on the page for a while
        for i in {1..3}; do
          echo "Activity simulation $i/3..."
          curl -s -m 20 \
            -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36" \
            -H "Referer: $URL" \
            -H "Accept: */*" \
            "$URL" > /dev/null
          
          [ $i -lt 3 ] && sleep 20
        done
        
        echo "✅ Activity simulation completed"
